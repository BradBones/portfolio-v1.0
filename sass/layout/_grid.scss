.row {
    max-width: $grid-width; //1140px
    margin: 0 auto; // to center block elements

    // Seclects everything execpt the last child
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(phone) {
            margin-right: 0;
            margin-bottom: 0;
        }

    }

    @include respond(phone) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix;

    // ^ Selects all class names which begin with "col-"
        // * would select classes that contain "col-"
        // $ would select classes that ends in "col-"
    [class^="col-"] {
        float: left;

        // Seclects everything execpt the last child
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }

        @include respond(phone) {
            width: 100% !important;
            margin-bottom: $gutter-vertical-small;
        }
    }

    .col-1-of-2 {
        // max-width - gutter / 2
        // use #{} syntax to place $variable within a calc() function
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        // max-width - 2 x gutter / 3
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        // 2 x the calculation of column 1-of-3 + the gutter width
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        // max-width - 3 x gutter / 4
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        // 2 x the calculation of column 1-of-4 + the gutter width
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        // 3 x the calculation of column 1-of-4 + 2x the gutter width
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }

}